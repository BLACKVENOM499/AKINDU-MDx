const { cmd } = require('../command');
const os = require('os');
const { runtime } = require('../lib/functions');

// Session to track user interactions
let aliveSessions = {};

cmd({
  pattern: "alive",
  alias: ["status", "runtime", "uptime", "speed", "ping"],
  desc: "Show bot status and wait for number typing",
  category: "main",
  react: "üìü",
  filename: __filename
}, async (conn, mek, m, { from, reply }) => {
  try {
    const usedMem = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
    const totalMem = (os.totalmem() / 1024 / 1024).toFixed(2);

    const text = `‚îè‚îÅ‚ùÆ ü©µ *AKINDU MD ALIVE* ü©µ ‚ùØ‚îÅ
‚îÉ‚óà ü§ñ *Bot Name* : AKINDU MD
‚îÉ‚óà üîñ *Version*  : 2.0
‚îÉ‚óà üìü *Platform* : ${os.platform()}
‚îÉ‚óà üë®‚Äçüíª *Owner*   : MR LAKSIDU
‚îÉ‚óà üìÜ *Runtime*  : ${runtime(process.uptime())}
‚îÉ‚óà üìà *RAM*      : ${usedMem}MB / ${totalMem}MB
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅñ£îñ£î

*Reply with a number to select:*
1Ô∏è‚É£ - Show Bot Speed  
2Ô∏è‚É£ - Show Owner Info  
3Ô∏è‚É£ - Exit`;

    const sent = await conn.sendMessage(from, { text }, { quoted: mek });

    // Save session
    aliveSessions[sent.key.id] = {
      from,
      user: m.sender
    };

  } catch (e) {
    console.error("Alive command error:", e);
    reply("‚ùå Error: " + e.message);
  }
});

// Listen for replies
cmd({
  on: "text"
}, async (conn, m, store, { from }) => {
  const quotedMsg = m.quoted;
  const quotedId = quotedMsg?.key?.id;

  if (!quotedId || !aliveSessions[quotedId]) return;

  const session = aliveSessions[quotedId];

  // Only allow the original user to reply
  if (m.sender !== session.user) return;

  const choice = m.text.trim();

  switch (choice) {
    case '1': {
      const latency = Date.now() - (m.messageTimestamp * 1000);
      await conn.sendMessage(from, {
        text: `‚ö° *Bot Speed*: ${latency} ms\n\n*AKINDU MD*`,
        quoted: m
      });
      break;
    }
    case '2':
      await conn.sendMessage(from, {
        text: `üëë *Owner*: MR LAKSIDU\nüìû wa.me/94712345678\n\n*AKINDU MD*`,
        quoted: m
      });
      break;
    case '3':
      await conn.sendMessage(from, {
        text: `‚úÖ *Exited the menu.*\n\nThank you ‚Äî *AKINDU MD*`,
        quoted: m
      });
      break;
    default:
      await conn.sendMessage(from, {
        text: `‚ùå Invalid option. Please reply with 1, 2 or 3.`,
        quoted: m
      });
      return;
  }

  // Remove session after one valid interaction
  delete aliveSessions[quotedId];
});
